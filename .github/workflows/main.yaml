name: Release
on:
  schedule:
    - cron: '34 7 * * *'

jobs:

  check-release:
    name: Check if latest image version matches gcloud cli version
    runs-on: ubuntu-latest
    steps:
      - id: auth
        name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v0
        with:
          token_format: access_token
          workload_identity_provider: ${{secrets.WORKLOAD_IDENTITY_PROVIDER}}
          service_account: ${{secrets.GCP_SERVICE_ACCOUNT}}
          access_token_lifetime: 300s

      - name: "setup gcloud"
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          version: '>= 363.0.0'
  
      - name: "get latest gcloud cli"
        run: echo "latestversion=$(curl -sL https://cloud.google.com/sdk/docs/release-notes | grep -oE '[0-9][0-9][0-9]\.[0-9]\.[0-9]' | sort -n | tail -n 1)" >> $GITHUB_ENV
 
      - name: "get current image verion"
        run: echo "currentversion=$(gcloud artifacts docker images list us-central1-docker.pkg.dev/public-cloudwerx-artifactory/cwx-public-images/gcloud --tag="latest" --include-tags --format="value(tags) | grep -oE '[0-9][0-9][0-9]\.[0-9]\.[0-9]')" >> $GITHUB_ENV
 
  docker-release:
    name: Tagged Docker release to Google Artifact Registry
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:




      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: us-west2-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ jobs.auth.outputs.access_token }}

      - name: Get tag
        id: get-tag
        run: echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}

      - id: docker-push-tagged
        name: Tag Docker image and push to Google Artifact Registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
             <your-gar-region>-docker.pkg.dev/<your-project-id>/<your-gar-repo-name>/<your-docker-image-name>:${{ steps.get-tag.outputs.short_ref }}
             <your-gar-region>-docker.pkg.dev/<your-project-id>/<your-gar-repo-name>/<your-docker-image-name>:latest